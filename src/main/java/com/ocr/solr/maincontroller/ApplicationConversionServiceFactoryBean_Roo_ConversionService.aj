// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.ocr.solr.maincontroller;

import com.ocr.solr.SolrBean;
import com.ocr.solr.maincontroller.ApplicationConversionServiceFactoryBean;
import com.ocr.solr.service.SolrService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    SolrService ApplicationConversionServiceFactoryBean.solrService;
    
    public Converter<SolrBean, String> ApplicationConversionServiceFactoryBean.getSolrBeanToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.ocr.solr.SolrBean, java.lang.String>() {
            public String convert(SolrBean solrBean) {
                return new StringBuilder().append(solrBean.getId()).append(' ').append(solrBean.getNumeroId()).append(' ').append(solrBean.getFileName()).append(' ').append(solrBean.getFname()).toString();
            }
        };
    }
    
    public Converter<Long, SolrBean> ApplicationConversionServiceFactoryBean.getIdToSolrBeanConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.ocr.solr.SolrBean>() {
            public com.ocr.solr.SolrBean convert(java.lang.Long id) {
                return solrService.findSolrBean(id);
            }
        };
    }
    
    public Converter<String, SolrBean> ApplicationConversionServiceFactoryBean.getStringToSolrBeanConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.ocr.solr.SolrBean>() {
            public com.ocr.solr.SolrBean convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), SolrBean.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getSolrBeanToStringConverter());
        registry.addConverter(getIdToSolrBeanConverter());
        registry.addConverter(getStringToSolrBeanConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
